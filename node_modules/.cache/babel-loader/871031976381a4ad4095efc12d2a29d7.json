{"ast":null,"code":"var _jsxFileName = \"/Users/charlotteweil1/Projets/Viz/gobiTraining/src/components/Legend.js\";\nimport React from \"react\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport { ChevronBarUp, ChevronDown } from \"react-bootstrap-icons\";\n\nclass Legend extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.makeLegend = () => {\n      if (!this.state.isCollapsed) {\n        return this.props.selectedDatasets.map(id => {\n          let dataset = this.props.datasets[id];\n          return dataset.legendSrc && /*#__PURE__*/React.createElement(Row, {\n            className: \"legend m-0\",\n            key: dataset.id,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 20,\n              columnNumber: 13\n            }\n          }, /*#__PURE__*/React.createElement(\"h5\", {\n            className: \"font-weight-normal m-0\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 15\n            }\n          }, dataset.title), /*#__PURE__*/React.createElement(\"img\", {\n            src: dataset.legendSrc && require(\"../data/legends/\" + dataset.legendSrc),\n            alt: \"legend\",\n            width: \"100%\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 15\n            }\n          }));\n        });\n      }\n\n      return /*#__PURE__*/React.createElement(Row, {\n        className: \"legend m-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 12\n        }\n      });\n    };\n\n    this.toggleCollapse = () => {\n      const isCollapsed = this.state.isCollapsed;\n      this.setState({\n        isCollapsed: !isCollapsed\n      });\n    };\n\n    this.state = {\n      isCollapsed: false\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Col, {\n      sm: 4,\n      className: \"p-0 position-absolute fixed-top fixed-right ml-auto  m-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }\n    }, this.makeLegend(), /*#__PURE__*/React.createElement(Row, {\n      className: \"p-0 m-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      sm: 1,\n      className: \"ml-auto offset-sm-11 p-1 dataSection cursor-pointer color-white\",\n      onClick: () => this.toggleCollapse(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"text-center m-0 hover-highlight \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }, !this.state.isCollapsed && /*#__PURE__*/React.createElement(ChevronBarUp, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 43\n      }\n    }), this.state.isCollapsed && /*#__PURE__*/React.createElement(ChevronDown, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 42\n      }\n    })))));\n  }\n\n}\n\nexport default Legend;","map":{"version":3,"sources":["/Users/charlotteweil1/Projets/Viz/gobiTraining/src/components/Legend.js"],"names":["React","Col","Row","ChevronBarUp","ChevronDown","Legend","Component","constructor","props","makeLegend","state","isCollapsed","selectedDatasets","map","id","dataset","datasets","legendSrc","title","require","toggleCollapse","setState","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,SAASC,YAAT,EAAuBC,WAAvB,QAA0C,uBAA1C;;AAEA,MAAMC,MAAN,SAAqBL,KAAK,CAACM,SAA3B,CAAqC;AACnCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAOnBC,UAPmB,GAON,MAAM;AACjB,UAAI,CAAC,KAAKC,KAAL,CAAWC,WAAhB,EAA6B;AAC3B,eAAO,KAAKH,KAAL,CAAWI,gBAAX,CAA4BC,GAA5B,CAAiCC,EAAD,IAAQ;AAC7C,cAAIC,OAAO,GAAG,KAAKP,KAAL,CAAWQ,QAAX,CAAoBF,EAApB,CAAd;AACA,iBACEC,OAAO,CAACE,SAAR,iBACE,oBAAC,GAAD;AAAK,YAAA,SAAS,EAAC,YAAf;AAA4B,YAAA,GAAG,EAAEF,OAAO,CAACD,EAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACE;AAAI,YAAA,SAAS,EAAC,wBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAwCC,OAAO,CAACG,KAAhD,CADF,eAEE;AACE,YAAA,GAAG,EACDH,OAAO,CAACE,SAAR,IACAE,OAAO,CAAC,qBAAqBJ,OAAO,CAACE,SAA9B,CAHX;AAKE,YAAA,GAAG,EAAC,QALN;AAME,YAAA,KAAK,EAAC,MANR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,CAFJ;AAeD,SAjBM,CAAP;AAkBD;;AACD,0BAAO,oBAAC,GAAD;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KA7BkB;;AAAA,SA+BnBG,cA/BmB,GA+BF,MAAM;AACrB,YAAMT,WAAW,GAAG,KAAKD,KAAL,CAAWC,WAA/B;AACA,WAAKU,QAAL,CAAc;AAAEV,QAAAA,WAAW,EAAE,CAACA;AAAhB,OAAd;AACD,KAlCkB;;AAEjB,SAAKD,KAAL,GAAa;AACXC,MAAAA,WAAW,EAAE;AADF,KAAb;AAGD;;AA+BDW,EAAAA,MAAM,GAAG;AACP,wBACE,oBAAC,GAAD;AACE,MAAA,EAAE,EAAE,CADN;AAEE,MAAA,SAAS,EAAC,0DAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIG,KAAKb,UAAL,EAJH,eAKE,oBAAC,GAAD;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AACE,MAAA,EAAE,EAAE,CADN;AAEE,MAAA,SAAS,EAAC,iEAFZ;AAGE,MAAA,OAAO,EAAE,MAAM,KAAKW,cAAL,EAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAKE;AAAI,MAAA,SAAS,EAAC,kCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,CAAC,KAAKV,KAAL,CAAWC,WAAZ,iBAA2B,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAD9B,EAEG,KAAKD,KAAL,CAAWC,WAAX,iBAA0B,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAF7B,CALF,CADF,CALF,CADF;AAoBD;;AA1DkC;;AA6DrC,eAAeN,MAAf","sourcesContent":["import React from \"react\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport { ChevronBarUp, ChevronDown } from \"react-bootstrap-icons\";\n\nclass Legend extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isCollapsed: false,\n    };\n  }\n\n  makeLegend = () => {\n    if (!this.state.isCollapsed) {\n      return this.props.selectedDatasets.map((id) => {\n        let dataset = this.props.datasets[id];\n        return (\n          dataset.legendSrc && (\n            <Row className=\"legend m-0\" key={dataset.id}>\n              <h5 className=\"font-weight-normal m-0\">{dataset.title}</h5>\n              <img\n                src={\n                  dataset.legendSrc &&\n                  require(\"../data/legends/\" + dataset.legendSrc)\n                }\n                alt=\"legend\"\n                width=\"100%\"\n              />\n            </Row>\n          )\n        );\n      });\n    }\n    return <Row className=\"legend m-0\"></Row>;\n  };\n\n  toggleCollapse = () => {\n    const isCollapsed = this.state.isCollapsed;\n    this.setState({ isCollapsed: !isCollapsed });\n  };\n\n  render() {\n    return (\n      <Col\n        sm={4}\n        className=\"p-0 position-absolute fixed-top fixed-right ml-auto  m-1\"\n      >\n        {this.makeLegend()}\n        <Row className=\"p-0 m-0\">\n          <Col\n            sm={1}\n            className=\"ml-auto offset-sm-11 p-1 dataSection cursor-pointer color-white\"\n            onClick={() => this.toggleCollapse()}\n          >\n            <h6 className=\"text-center m-0 hover-highlight \">\n              {!this.state.isCollapsed && <ChevronBarUp />}\n              {this.state.isCollapsed && <ChevronDown />}\n            </h6>\n          </Col>\n        </Row>\n      </Col>\n    );\n  }\n}\n\nexport default Legend;\n"]},"metadata":{},"sourceType":"module"}