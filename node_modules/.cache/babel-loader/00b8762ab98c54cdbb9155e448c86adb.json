{"ast":null,"code":"var _jsxFileName = \"/Users/charlotteweil1/Projets/Viz/gobiTraining/src/components/LeftPanel.js\";\nimport React from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Col from \"react-bootstrap/Col\";\nimport Card from \"./Card\";\nimport BarChart from \"./BarChart\";\nimport LineChart from \"./LineChart\";\n\nclass LeftPanel extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.showInfo = sectionID => {\n      let SecondaryPanel = this.props.SecondaryPanel;\n      SecondaryPanel.show = SecondaryPanel.show && SecondaryPanel.id === sectionID ? false : true;\n      SecondaryPanel.id = sectionID;\n      this.props.updateState(SecondaryPanel);\n    };\n\n    this.expandSection = sectionID => {\n      let dataSections = [...this.props.sections];\n      dataSections[sectionID].expanded = dataSections[sectionID].expanded ? false : true;\n      this.props.updateState(dataSections);\n    };\n\n    this.toggleDataset = datasetID => {\n      let datasets = [].concat([...this.props.datasets]);\n      datasets[datasetID].selected = datasets[datasetID].selected ? false : true;\n      this.props.updateDatasets(datasets);\n      let selectedDatasets = [...this.props.selectedDatasets];\n      datasets[datasetID].selected ? selectedDatasets.push(datasetID) : selectedDatasets.splice(selectedDatasets.indexOf(datasetID), 1);\n      this.props.updateSelectedDatasets(selectedDatasets);\n    };\n\n    this.makeCards = dataSections => {\n      return dataSections.map(item => {\n        return /*#__PURE__*/React.createElement(Card, {\n          item: item,\n          key: item.id,\n          datasets: this.props.datasets,\n          showInfoButton: this.props.config.showInfoButton,\n          showDownloadButton: this.props.config.showDownloadButton,\n          click: () => this.showInfo(item.id),\n          expandSection: () => this.expandSection(item.id),\n          toggleDataset: this.toggleDataset,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 9\n          }\n        });\n      });\n    };\n\n    this.makeChart = () => {\n      let out;\n\n      switch (this.props.chart.type) {\n        case \"bar\":\n          out = /*#__PURE__*/React.createElement(BarChart, {\n            item: this.props.chart,\n            isLinked: this.props.config.chartIsLinkedTo,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 11\n            }\n          });\n          break;\n\n        case \"line\":\n          out = /*#__PURE__*/React.createElement(LineChart, {\n            item: this.props.chart,\n            isLinked: this.props.config.chartIsLinkedTo,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 11\n            }\n          });\n          break;\n\n        default:\n      }\n\n      return out;\n    };\n  }\n\n  render() {\n    let linkedChart = this.props.config.chartIsLinkedTo;\n    let displayChart = linkedChart ? this.props.datasets[linkedChart].selected : this.props.chart;\n    return /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      className: \"p-0 leftbar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \" p-2 font-weight-light color-white\",\n      style: {\n        borderBottom: \"3px solid var(--highlight-color)\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }\n    }, \"Datasets\"), /*#__PURE__*/React.createElement(Col, {\n      className: \"p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }\n    }, this.makeCards(this.props.sections)), displayChart && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dataSection p-2 m-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }\n    }, this.makeChart()));\n  }\n\n}\n\nexport default LeftPanel;","map":{"version":3,"sources":["/Users/charlotteweil1/Projets/Viz/gobiTraining/src/components/LeftPanel.js"],"names":["React","Container","Col","Card","BarChart","LineChart","LeftPanel","Component","showInfo","sectionID","SecondaryPanel","props","show","id","updateState","expandSection","dataSections","sections","expanded","toggleDataset","datasetID","datasets","concat","selected","updateDatasets","selectedDatasets","push","splice","indexOf","updateSelectedDatasets","makeCards","map","item","config","showInfoButton","showDownloadButton","makeChart","out","chart","type","chartIsLinkedTo","render","linkedChart","displayChart","borderBottom"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Col from \"react-bootstrap/Col\";\n\nimport Card from \"./Card\";\nimport BarChart from \"./BarChart\";\nimport LineChart from \"./LineChart\";\n\nclass LeftPanel extends React.Component {\n  // given an section id, this function displays the secondary panel with that id\n  showInfo = (sectionID) => {\n    let SecondaryPanel = this.props.SecondaryPanel;\n    SecondaryPanel.show =\n      SecondaryPanel.show && SecondaryPanel.id === sectionID ? false : true;\n    SecondaryPanel.id = sectionID;\n    this.props.updateState(SecondaryPanel);\n  };\n\n  // function for expanding the section\n  expandSection = (sectionID) => {\n    let dataSections = [...this.props.sections];\n    dataSections[sectionID].expanded = dataSections[sectionID].expanded\n      ? false\n      : true;\n    this.props.updateState(dataSections);\n  };\n\n  // function for selecting a data set to be displayed on the map\n  toggleDataset = (datasetID) => {\n    let datasets = [].concat([...this.props.datasets]);\n    datasets[datasetID].selected = datasets[datasetID].selected ? false : true;\n    this.props.updateDatasets(datasets);\n\n    let selectedDatasets = [...this.props.selectedDatasets];\n    datasets[datasetID].selected\n      ? selectedDatasets.push(datasetID)\n      : selectedDatasets.splice(selectedDatasets.indexOf(datasetID), 1);\n    this.props.updateSelectedDatasets(selectedDatasets);\n  };\n\n  // display the sections in the leftpanel\n  makeCards = (dataSections) => {\n    return dataSections.map((item) => {\n      return (\n        <Card\n          item={item}\n          key={item.id}\n          datasets={this.props.datasets}\n          showInfoButton={this.props.config.showInfoButton}\n          showDownloadButton={this.props.config.showDownloadButton}\n          click={() => this.showInfo(item.id)}\n          expandSection={() => this.expandSection(item.id)}\n          toggleDataset={this.toggleDataset}\n        />\n      );\n    });\n  };\n  makeChart = () => {\n    let out;\n    switch (this.props.chart.type) {\n      case \"bar\":\n        out = (\n          <BarChart\n            item={this.props.chart}\n            isLinked={this.props.config.chartIsLinkedTo}\n          />\n        );\n        break;\n      case \"line\":\n        out = (\n          <LineChart\n            item={this.props.chart}\n            isLinked={this.props.config.chartIsLinkedTo}\n          />\n        );\n        break;\n      default:\n    }\n    return out;\n  };\n\n  render() {\n    let linkedChart = this.props.config.chartIsLinkedTo;\n    let displayChart = linkedChart\n      ? this.props.datasets[linkedChart].selected\n      : this.props.chart;\n    return (\n      <Container fluid={true} className=\"p-0 leftbar\">\n        <h1\n          className=\" p-2 font-weight-light color-white\"\n          style={{ borderBottom: \"3px solid var(--highlight-color)\" }}\n        >\n          Datasets\n        </h1>\n        <Col className=\"p-0\">{this.makeCards(this.props.sections)}</Col>\n\n        {displayChart && (\n          <div className=\"dataSection p-2 m-1\">{this.makeChart()}</div>\n        )}\n      </Container>\n    );\n  }\n}\n\nexport default LeftPanel;\n"]},"metadata":{},"sourceType":"module"}