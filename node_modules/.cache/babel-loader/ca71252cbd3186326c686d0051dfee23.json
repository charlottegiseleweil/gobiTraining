{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/Users/charlotteweil1/Projets/Viz/gobiTraining/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/Users/charlotteweil1/Projets/Viz/gobiTraining/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar fallback = require('./binaryajax-browser');\n\nvar Buffer = require('buffer').Buffer;\n\nmodule.exports = /*#__PURE__*/function () {\n  var _binaryAjax = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(url) {\n    var type, isOptionalTxt, resp;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (global.fetch) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\", fallback(url));\n\n          case 2:\n            type = url.slice(-3).toLowerCase();\n            isOptionalTxt = type === 'prj' || type === 'cpg';\n            _context.prev = 4;\n            _context.next = 7;\n            return fetch(url);\n\n          case 7:\n            resp = _context.sent;\n\n            if (!(resp.status > 399)) {\n              _context.next = 10;\n              break;\n            }\n\n            throw new Error(resp.statusText);\n\n          case 10:\n            if (!isOptionalTxt) {\n              _context.next = 12;\n              break;\n            }\n\n            return _context.abrupt(\"return\", resp.text());\n\n          case 12:\n            _context.next = 14;\n            return resp.arrayBuffer();\n\n          case 14:\n            resp = _context.sent;\n            return _context.abrupt(\"return\", Buffer.from(resp));\n\n          case 18:\n            _context.prev = 18;\n            _context.t0 = _context[\"catch\"](4);\n\n            if (!isOptionalTxt) {\n              _context.next = 22;\n              break;\n            }\n\n            return _context.abrupt(\"return\", false);\n\n          case 22:\n            throw _context.t0;\n\n          case 23:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[4, 18]]);\n  }));\n\n  function binaryAjax(_x) {\n    return _binaryAjax.apply(this, arguments);\n  }\n\n  return binaryAjax;\n}();","map":{"version":3,"sources":["/Users/charlotteweil1/Projets/Viz/gobiTraining/node_modules/shpjs/lib/binaryajax-fetch.js"],"names":["fallback","require","Buffer","module","exports","url","global","fetch","type","slice","toLowerCase","isOptionalTxt","resp","status","Error","statusText","text","arrayBuffer","from","binaryAjax"],"mappings":"AAAA;;;;;;AACA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,sBAAD,CAAtB;;AACA,IAAIC,MAAM,GAAGD,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAA/B;;AACAC,MAAM,CAACC,OAAP;AAAA,6EAAiB,iBAA0BC,GAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACVC,MAAM,CAACC,KADG;AAAA;AAAA;AAAA;;AAAA,6CAENP,QAAQ,CAACK,GAAD,CAFF;;AAAA;AAIXG,YAAAA,IAJW,GAIJH,GAAG,CAACI,KAAJ,CAAU,CAAC,CAAX,EAAcC,WAAd,EAJI;AAKXC,YAAAA,aALW,GAKKH,IAAI,KAAG,KAAP,IAAgBA,IAAI,KAAK,KAL9B;AAAA;AAAA;AAAA,mBAOID,KAAK,CAACF,GAAD,CAPT;;AAAA;AAOTO,YAAAA,IAPS;;AAAA,kBAQTA,IAAI,CAACC,MAAL,GAAc,GARL;AAAA;AAAA;AAAA;;AAAA,kBASL,IAAIC,KAAJ,CAAUF,IAAI,CAACG,UAAf,CATK;;AAAA;AAAA,iBAWTJ,aAXS;AAAA;AAAA;AAAA;;AAAA,6CAYJC,IAAI,CAACI,IAAL,EAZI;;AAAA;AAAA;AAAA,mBAcIJ,IAAI,CAACK,WAAL,EAdJ;;AAAA;AAcTL,YAAAA,IAdS;AAAA,6CAeNV,MAAM,CAACgB,IAAP,CAAYN,IAAZ,CAfM;;AAAA;AAAA;AAAA;;AAAA,iBAiBXD,aAjBW;AAAA;AAAA;AAAA;;AAAA,6CAkBJ,KAlBI;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjB;;AAAA,WAAgCQ,UAAhC;AAAA;AAAA;;AAAA,SAAgCA,UAAhC;AAAA","sourcesContent":["'use strict';\nvar fallback = require('./binaryajax-browser');\nvar Buffer = require('buffer').Buffer\nmodule.exports = async function binaryAjax(url){\n  if (!global.fetch) {\n    return fallback(url)\n  }\n  var type = url.slice(-3).toLowerCase();\n  var isOptionalTxt = type==='prj' || type === 'cpg';\n  try {\n    var resp = await fetch(url)\n    if (resp.status > 399) {\n      throw new Error(resp.statusText);\n    }\n    if (isOptionalTxt) {\n      return resp.text();\n    }\n    var resp = await resp.arrayBuffer();\n    return Buffer.from(resp);\n  } catch (e) {\n  \tif(isOptionalTxt){\n      return false;\n    }\n    throw e;\n  }\n}\n"]},"metadata":{},"sourceType":"script"}