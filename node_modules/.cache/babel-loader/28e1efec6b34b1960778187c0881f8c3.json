{"ast":null,"code":"/* In this file the funtions for styling rasters and shapefiles are defined.\r\nFirst, the different color schemas are defined. Then a function called \"Style\" \r\nis declared which returns the styling objects that are exported to data.js \r\nShapefiles needs a seperate function to define opacity, fillcolor etc (see examples in style()) \r\nRasters only need the color Schema*/\n\n/*Examples diverging color schema*/\nconst redToBlueColor = d => {\n  return d > 0.9 ? \"#4878b7\" : d > 0.8 ? \"#849cb8\" : d > 0.7 ? \"#c1c0b8\" : d > 0.6 ? \"#fde3b8\" : d > 0.5 ? \"#f0ac8c\" : d > 0.4 ? \"#e2745f\" : \"#d43c33\";\n};\n/*Examples sequential colors schema*/\n\n\nconst bluesColor = d => {\n  return d > 0.8 ? \"#08519c\" : d > 0.6 ? \"#3182bd\" : d > 0.4 ? \"#6baed6\" : d > 0.2 ? \"#bdd7e7\" : \"#eff3ff\";\n};\n\nconst greensColor = d => {\n  return d > 0.8 ? \"#006d2c\" : d > 0.6 ? \"#31a354\" : d > 0.4 ? \"#74c476\" : d > 0.2 ? \"#bae4b3\" : \"#edf8e9\";\n};\n\nconst redsColor = d => {\n  return d > 0.8 ? \"#a50f15\" : d > 0.6 ? \"#de2d26\" : d > 0.4 ? \"#fb6a4a\" : d > 0.2 ? \"#fcae91\" : \"#fee5d9\";\n};\n\nconst purplesColor = d => {\n  return d > 0.8 ? \"#54278f\" : d > 0.6 ? \"#756bb1\" : d > 0.4 ? \"#9e9ac8\" : d > 0.2 ? \"#cbc9e2\" : \"#f2f0f7\";\n};\n/*Examples catagorical color schema*/\n\n\nconst greenAndRedColor = d => {\n  switch (d) {\n    case 1:\n      return \"#ab1700\";\n\n    case -1:\n      return \"#00ab39\";\n\n    default:\n      return null;\n  }\n}; // the returning object from this function is exported to data.js\n\n\nfunction Style() {\n  // example -- red outline\n  function redOutline() {\n    return {\n      fillColor: \"none\",\n      weight: 2,\n      opacity: 0.9,\n      color: \"#ff0000\"\n    };\n  } // example -- styling based on the property called \"Base_idx\" in the shapefile\n\n\n  function redToBlue(feature) {\n    return {\n      fillColor: redToBlueColor(feature),\n      weight: 0.5,\n      opacity: 0.9,\n      color: \"#958f8f\",\n      Array: \"0\",\n      fillOpacity: 0.5\n    };\n  } // example functions for shapefiles -- change \"xxx\" to the name of your shapefile property\n\n\n  function blues(feature) {\n    return {\n      fillColor: bluesColor(feature),\n      weight: 0.5,\n      opacity: 0.9,\n      color: \"#958f8f\",\n      Array: \"0\",\n      fillOpacity: 0.5\n    };\n  }\n\n  function greens(feature) {\n    return {\n      fillColor: greensColor(feature),\n      weight: 0.5,\n      opacity: 0.9,\n      color: \"#958f8f\",\n      Array: \"0\",\n      fillOpacity: 0.5\n    };\n  }\n\n  function reds(feature) {\n    return {\n      fillColor: redsColor(feature),\n      weight: 0.5,\n      opacity: 0.9,\n      color: \"#958f8f\",\n      Array: \"0\",\n      fillOpacity: 0.5\n    };\n  }\n\n  function purples(feature) {\n    return {\n      fillColor: purplesColor(feature),\n      weight: 0.5,\n      opacity: 0.9,\n      color: \"#958f8f\",\n      Array: \"0\",\n      fillOpacity: 0.5\n    };\n  } // This exports an object containing all the styling functions to be used in data.js\n\n\n  return {\n    redToBlue: redToBlue,\n    redOutline: redOutline,\n    blues: blues,\n    greens: greens,\n    reds: reds,\n    purples: purples,\n    greenAndRedRaster: greenAndRedColor // raster only need a color\n\n  };\n}\n\nexport default Style;","map":{"version":3,"sources":["/Users/charlotteweil1/Projets/Viz/gobiTraining/src/data/mapStyling.js"],"names":["redToBlueColor","d","bluesColor","greensColor","redsColor","purplesColor","greenAndRedColor","Style","redOutline","fillColor","weight","opacity","color","redToBlue","feature","Array","fillOpacity","blues","greens","reds","purples","greenAndRedRaster"],"mappings":"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","sourcesContent":["/* In this file the funtions for styling rasters and shapefiles are defined.\r\nFirst, the different color schemas are defined. Then a function called \"Style\" \r\nis declared which returns the styling objects that are exported to data.js \r\nShapefiles needs a seperate function to define opacity, fillcolor etc (see examples in style()) \r\nRasters only need the color Schema*/\r\n\r\n/*Examples diverging color schema*/\r\nconst redToBlueColor = (d) => {\r\n  return d > 0.9\r\n    ? \"#4878b7\"\r\n    : d > 0.8\r\n    ? \"#849cb8\"\r\n    : d > 0.7\r\n    ? \"#c1c0b8\"\r\n    : d > 0.6\r\n    ? \"#fde3b8\"\r\n    : d > 0.5\r\n    ? \"#f0ac8c\"\r\n    : d > 0.4\r\n    ? \"#e2745f\"\r\n    : \"#d43c33\";\r\n};\r\n\r\n/*Examples sequential colors schema*/\r\nconst bluesColor = (d) => {\r\n  return d > 0.8\r\n    ? \"#08519c\"\r\n    : d > 0.6\r\n    ? \"#3182bd\"\r\n    : d > 0.4\r\n    ? \"#6baed6\"\r\n    : d > 0.2\r\n    ? \"#bdd7e7\"\r\n    : \"#eff3ff\";\r\n};\r\nconst greensColor = (d) => {\r\n  return d > 0.8\r\n    ? \"#006d2c\"\r\n    : d > 0.6\r\n    ? \"#31a354\"\r\n    : d > 0.4\r\n    ? \"#74c476\"\r\n    : d > 0.2\r\n    ? \"#bae4b3\"\r\n    : \"#edf8e9\";\r\n};\r\nconst redsColor = (d) => {\r\n  return d > 0.8\r\n    ? \"#a50f15\"\r\n    : d > 0.6\r\n    ? \"#de2d26\"\r\n    : d > 0.4\r\n    ? \"#fb6a4a\"\r\n    : d > 0.2\r\n    ? \"#fcae91\"\r\n    : \"#fee5d9\";\r\n};\r\nconst purplesColor = (d) => {\r\n  return d > 0.8\r\n    ? \"#54278f\"\r\n    : d > 0.6\r\n    ? \"#756bb1\"\r\n    : d > 0.4\r\n    ? \"#9e9ac8\"\r\n    : d > 0.2\r\n    ? \"#cbc9e2\"\r\n    : \"#f2f0f7\";\r\n};\r\n\r\n/*Examples catagorical color schema*/\r\nconst greenAndRedColor = (d) => {\r\n  switch (d) {\r\n    case 1:\r\n      return \"#ab1700\";\r\n    case -1:\r\n      return \"#00ab39\";\r\n    default:\r\n      return null;\r\n  }\r\n};\r\n\r\n// the returning object from this function is exported to data.js\r\nfunction Style() {\r\n  // example -- red outline\r\n  function redOutline() {\r\n    return {\r\n      fillColor: \"none\",\r\n      weight: 2,\r\n      opacity: 0.9,\r\n      color: \"#ff0000\",\r\n    };\r\n  }\r\n\r\n  // example -- styling based on the property called \"Base_idx\" in the shapefile\r\n  function redToBlue(feature) {\r\n    return {\r\n      fillColor: redToBlueColor(feature),\r\n      weight: 0.5,\r\n      opacity: 0.9,\r\n      color: \"#958f8f\",\r\n      Array: \"0\",\r\n      fillOpacity: 0.5,\r\n    };\r\n  }\r\n\r\n  // example functions for shapefiles -- change \"xxx\" to the name of your shapefile property\r\n  function blues(feature) {\r\n    return {\r\n      fillColor: bluesColor(feature),\r\n      weight: 0.5,\r\n      opacity: 0.9,\r\n      color: \"#958f8f\",\r\n      Array: \"0\",\r\n      fillOpacity: 0.5,\r\n    };\r\n  }\r\n  function greens(feature) {\r\n    return {\r\n      fillColor: greensColor(feature),\r\n      weight: 0.5,\r\n      opacity: 0.9,\r\n      color: \"#958f8f\",\r\n      Array: \"0\",\r\n      fillOpacity: 0.5,\r\n    };\r\n  }\r\n  function reds(feature) {\r\n    return {\r\n      fillColor: redsColor(feature),\r\n      weight: 0.5,\r\n      opacity: 0.9,\r\n      color: \"#958f8f\",\r\n      Array: \"0\",\r\n      fillOpacity: 0.5,\r\n    };\r\n  }\r\n  function purples(feature) {\r\n    return {\r\n      fillColor: purplesColor(feature),\r\n      weight: 0.5,\r\n      opacity: 0.9,\r\n      color: \"#958f8f\",\r\n      Array: \"0\",\r\n      fillOpacity: 0.5,\r\n    };\r\n  }\r\n\r\n  // This exports an object containing all the styling functions to be used in data.js\r\n  return {\r\n    redToBlue: redToBlue,\r\n    redOutline: redOutline,\r\n    blues: blues,\r\n    greens: greens,\r\n    reds: reds,\r\n    purples: purples,\r\n    greenAndRedRaster: greenAndRedColor, // raster only need a color\r\n  };\r\n}\r\n\r\nexport default Style;\r\n"]},"metadata":{},"sourceType":"module"}